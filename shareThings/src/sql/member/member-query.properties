#JODY
listCount=SELECT COUNT(*) FROM MEMBER
selectList=SELECT RNUM, UNO, USER_ID, USER_NAME, PHONE, ADDRESS, PROFITS, TOTAL_POINT, PENALTY_POINT, ENROLL_DATE, STATUS FROM (SELECT ROWNUM RNUM, UNO, USER_ID, USER_NAME, PHONE, ADDRESS, PROFITS, TOTAL_POINT, PENALTY_POINT, ENROLL_DATE, STATUS FROM (SELECT UNO, USER_ID, USER_NAME, PHONE, ADDRESS, PROFITS, TOTAL_POINT, PENALTY_POINT, ENROLL_DATE, STATUS FROM MEMBER ORDER BY UNO DESC)) WHERE RNUM BETWEEN ? AND ?
selectMlevelList=SELECT * FROM MLEVEL
updateMlevel=UPDATE MLEVEL SET LEVEL_NAME = ?, LEVEL_STD = ?, PER_POINT = ? WHERE LEVEL_CODE = ?
reportListCount=SELECT COUNT(*) FROM REPORT
selectReportList=SELECT RNUM, REPORT_NO, USER1, REPORT_NAME, REPORT_CONTENT, USER2, REPORT_DATE, COMPLETE_DATE, REPORT_RESULT, PENALTY_POINT, REJECT, PENALTY FROM (SELECT ROWNUM RNUM, REPORT_NO, USER1, REPORT_NAME, REPORT_CONTENT, USER2, REPORT_DATE, COMPLETE_DATE, REPORT_RESULT, PENALTY_POINT, REJECT, PENALTY FROM (SELECT R.REPORT_NO, M1.USER_ID USER1, S.REPORT_NAME, R.REPORT_CONTENT, M2.USER_ID USER2, R.REPORT_DATE, R.COMPLETE_DATE, R.REPORT_RESULT, M1.PENALTY_POINT, R.REJECT, S.PENALTY FROM REPORT R JOIN MEMBER M1 ON (M1.UNO = R.TARGET_UNO) JOIN MEMBER M2 ON (M2.UNO = R.REPORT_UNO) JOIN R_REASON S ON (R.REPORT_CODE = S.REPORT_CODE) ORDER BY REPORT_NO DESC)) WHERE RNUM BETWEEN ? AND ?
paybackListCount=SELECT COUNT(*) FROM PAYBACK
selectPaybackList=SELECT RNUM, PB_NO, USER_ID, USER_NAME, BANK, ACCOUNT, ACCNAME, REQ_DATE, PB_AMOUNT, PB_DATE, PB_STATUS FROM (SELECT ROWNUM RNUM, PB_NO, USER_ID, USER_NAME, BANK, ACCOUNT, ACCNAME, REQ_DATE, PB_AMOUNT, PB_DATE, PB_STATUS FROM (SELECT P.PB_NO, M.USER_ID, M.USER_NAME, P.BANK, P.ACCOUNT, P.ACCNAME, P.REQ_DATE, P.PB_AMOUNT, P.PB_DATE, P.PB_STATUS FROM PAYBACK P JOIN MEMBER M ON (M.UNO = P.UNO) ORDER BY PB_NO DESC)) WHERE RNUM BETWEEN ? AND ?
refundListCount=SELECT COUNT(*) FROM REFUND
selectRefundList=SELECT RNUM, RF_NO, USER_ID, VERIFY_CODE, RF_REASON, PRICE, DEPOSIT , RF_TYPE, REQ_DATE, RF_DATE, RF_STATUS, TOTAL_DATE, LEFT_DATE, RT_SID FROM (SELECT ROWNUM RNUM, RF_NO, USER_ID, VERIFY_CODE, RF_REASON, PRICE, DEPOSIT , RF_TYPE, REQ_DATE, RF_DATE, RF_STATUS, TOTAL_DATE, LEFT_DATE, RT_SID FROM (SELECT R.RF_NO, M.USER_ID, P.VERIFY_CODE, R.RF_REASON, P.PRICE, PD.DEPOSIT , R.RF_TYPE, R.REQ_DATE, R.RF_DATE, RF_STATUS, (T.RT_END_DATE - T.RT_ST_DATE) TOTAL_DATE, (R.REQ_DATE - T.RT_ST_DATE) LEFT_DATE, T.RT_SID FROM REFUND R JOIN MEMBER M ON (M.UNO = R.UNO) JOIN PAY P ON (P.PAY_NO = R.PAY_NO) JOIN RENTAL T ON (P.RT_NO = T.RT_NO) JOIN PRODUCT PD ON (P.PNO = PD.PNO) WHERE T.RT_SID IN ('RTS8', 'RTS10', 'RTS12') ORDER BY RF_NO DESC)) WHERE RNUM BETWEEN ? AND ?
reportOk=UPDATE REPORT SET REPORT_RESULT = 'Y', COMPLETE_DATE = SYSDATE WHERE REPORT_NO = ?
selectOneReport=SELECT R.REPORT_NO, M1.USER_ID USER_ID1, S.REPORT_NAME, R.REPORT_CONTENT, M2.USER_ID USER_ID2, R.REPORT_DATE, R.COMPLETE_DATE, R.REPORT_RESULT, M1.PENALTY_POINT, R.REJECT, S.PENALTY, M1.USER_NAME USER_NAME1, M2.USER_NAME USER_NAME2 FROM REPORT R JOIN MEMBER M1 ON (M1.UNO = R.TARGET_UNO) JOIN MEMBER M2 ON (M2.UNO = R.REPORT_UNO) JOIN R_REASON S ON (R.REPORT_CODE = S.REPORT_CODE) WHERE REPORT_NO = ?
reportNo=UPDATE REPORT SET REPORT_RESULT = 'N', COMPLETE_DATE = SYSDATE, REJECT = ? WHERE REPORT_NO = ?
selectOneMember=SELECT M.UNO, M.USER_ID, M.USER_NAME, M.EMAIL_VERIF ,M.GENDER, M.BIRTH_DATE, M.PHONE, M.SUB_PHONE, M.EMAIL, M.ADDRESS, M.ENROLL_DATE, M.MODIFY_DATE, L.LEVEL_NAME, M.TOTAL_POINT, M.PROFITS, M.PENALTY_POINT, M.OPTION_CHECK, M.SOCIAL_LINK, M.STATUS, (SELECT COUNT(*) FROM PRODUCT P JOIN MEMBER M ON(M.UNO = P.UNO) WHERE P.UNO = ?) INPUT,(SELECT COUNT(*) FROM RENTAL R JOIN MEMBER M ON(M.UNO = R.UNO) WHERE R.UNO = ?) OUTPUT FROM MEMBER M JOIN MLEVEL L ON (M.MEMBER_LEVEL = L.LEVEL_CODE) WHERE UNO = ?
paybackOk=UPDATE PAYBACK SET PB_DATE = SYSDATE, PB_STATUS = 'Y' WHERE PB_NO = ?
updateProfits=UPDATE MEMBER SET PROFITS = (SELECT PROFITS FROM MEMBER WHERE UNO = (SELECT UNO FROM PAYBACK WHERE PB_NO = ?)) - (SELECT PB_AMOUNT FROM PAYBACK WHERE UNO = (SELECT UNO FROM PAYBACK WHERE PB_NO = ?)) WHERE UNO = (SELECT UNO FROM PAYBACK WHERE PB_NO = ?)
refundOk=UPDATE REFUND SET RF_DATE = SYSDATE, RF_STATUS = 'Y' WHERE RF_NO = ?
memberFilterCount=SELECT COUNT(*) FROM MEMBER WHERE 
memberFilter=SELECT RNUM, UNO, USER_ID, USER_NAME, PHONE, ADDRESS, PROFITS, TOTAL_POINT, PENALTY_POINT, ENROLL_DATE, STATUS, MEMBER_LEVEL FROM (SELECT ROWNUM RNUM, UNO, USER_ID, USER_NAME, PHONE, ADDRESS, PROFITS, TOTAL_POINT, PENALTY_POINT, ENROLL_DATE, STATUS, MEMBER_LEVEL FROM (SELECT UNO, USER_ID, USER_NAME, PHONE, ADDRESS, PROFITS, TOTAL_POINT, PENALTY_POINT, ENROLL_DATE, STATUS, MEMBER_LEVEL FROM MEMBER ORDER BY UNO DESC)) WHERE  
reportFilterCount=SELECT COUNT(*) FROM (SELECT R.REPORT_NO, M1.USER_ID USER1, S.REPORT_NAME, R.REPORT_CONTENT, M2.USER_ID USER2, R.REPORT_DATE, R.COMPLETE_DATE, R.REPORT_RESULT, S.PENALTY FROM REPORT R JOIN MEMBER M1 ON (R.TARGET_UNO = M1.UNO) JOIN MEMBER M2 ON (R.REPORT_UNO = M2.UNO) JOIN R_REASON S ON (R.REPORT_CODE = S.REPORT_CODE)) WHERE 
reportFilter=SELECT RNUM, REPORT_NO, USER1, REPORT_NAME, REPORT_CONTENT, USER2, REPORT_DATE, COMPLETE_DATE, REPORT_RESULT, PENALTY FROM (SELECT ROWNUM RNUM, REPORT_NO, USER1, REPORT_NAME, REPORT_CONTENT, USER2, REPORT_DATE, COMPLETE_DATE, REPORT_RESULT, PENALTY FROM (SELECT R.REPORT_NO, M1.USER_ID USER1, S.REPORT_NAME, R.REPORT_CONTENT, M2.USER_ID USER2, R.REPORT_DATE, R.COMPLETE_DATE, R.REPORT_RESULT, S.PENALTY FROM REPORT R JOIN MEMBER M1 ON (R.TARGET_UNO = M1.UNO) JOIN MEMBER M2 ON (R.REPORT_UNO = M2.UNO) JOIN R_REASON S ON (R.REPORT_CODE = S.REPORT_CODE) ORDER BY REPORT_NO DESC)) WHERE  
paybackFilterCount=SELECT COUNT(*) FROM (SELECT P.PB_NO, M.USER_ID, P.ACCOUNT, P.BANK, P.ACCNAME, P.PB_AMOUNT, P.REQ_DATE, P.PB_DATE, P.PB_STATUS FROM PAYBACK P JOIN MEMBER M ON (P.UNO = M.UNO)) WHERE 
paybackFilter=SELECT RNUM, PB_NO, USER_ID, ACCOUNT, BANK, ACCNAME, PB_AMOUNT, REQ_DATE, PB_DATE, PB_STATUS FROM (SELECT ROWNUM RNUM, PB_NO, USER_ID, ACCOUNT, BANK, ACCNAME, PB_AMOUNT, REQ_DATE, PB_DATE, PB_STATUS FROM (SELECT P.PB_NO, M.USER_ID, P.ACCOUNT, P.BANK, P.ACCNAME, P.PB_AMOUNT, P.REQ_DATE, P.PB_DATE, P.PB_STATUS FROM PAYBACK P JOIN MEMBER M ON (P.UNO = M.UNO) ORDER BY PB_NO DESC)) WHERE   
refundFilterCount=SELECT COUNT(*) FROM (SELECT R.RF_NO, M.USER_ID, P.VERIFY_CODE, R.RF_REASON, P.PRICE, PD.DEPOSIT , R.RF_TYPE, R.REQ_DATE, R.RF_DATE, RF_STATUS, (T.RT_END_DATE - T.RT_ST_DATE) TOTAL_DATE, (R.REQ_DATE - T.RT_ST_DATE) LEFT_DATE, T.RT_SID FROM REFUND R JOIN MEMBER M ON (M.UNO = R.UNO) JOIN PAY P ON (P.PAY_NO = R.PAY_NO) JOIN RENTAL T ON (P.RT_NO = T.RT_NO) JOIN PRODUCT PD ON (P.PNO = PD.PNO) WHERE T.RT_SID IN ('RTS8', 'RTS10', 'RTS12') ORDER BY RF_NO DESC) WHERE 
refundFilter=SELECT RNUM, RF_NO, USER_ID, VERIFY_CODE, RF_REASON, PRICE, DEPOSIT , RF_TYPE, REQ_DATE, RF_DATE, RF_STATUS, TOTAL_DATE, LEFT_DATE, RT_SID FROM (SELECT ROWNUM RNUM, RF_NO, USER_ID, VERIFY_CODE, RF_REASON, PRICE, DEPOSIT , RF_TYPE, REQ_DATE, RF_DATE, RF_STATUS, TOTAL_DATE, LEFT_DATE, RT_SID FROM (SELECT R.RF_NO, M.USER_ID, P.VERIFY_CODE, R.RF_REASON, P.PRICE, PD.DEPOSIT , R.RF_TYPE, R.REQ_DATE, R.RF_DATE, RF_STATUS, (T.RT_END_DATE - T.RT_ST_DATE) TOTAL_DATE, (R.REQ_DATE - T.RT_ST_DATE) LEFT_DATE, T.RT_SID FROM REFUND R JOIN MEMBER M ON (M.UNO = R.UNO) JOIN PAY P ON (P.PAY_NO = R.PAY_NO) JOIN RENTAL T ON (P.RT_NO = T.RT_NO) JOIN PRODUCT PD ON (P.PNO = PD.PNO) WHERE T.RT_SID IN ('RTS8', 'RTS10', 'RTS12') ORDER BY RF_NO DESC)) WHERE 
downloadList=SELECT P.PB_NO, P.ACCNAME, P.BANK, P.ACCOUNT, P.PB_AMOUNT FROM PAYBACK P WHERE PB_NO = ? ORDER BY PB_NO DESC
updateMemberPenalty=UPDATE MEMBER SET PENALTY_POINT = (SELECT ((SELECT PENALTY_POINT FROM MEMBER WHERE UNO = (SELECT TARGET_UNO FROM REPORT WHERE REPORT_NO = ?)) + (SELECT PENALTY FROM R_REASON RS JOIN REPORT RP ON (RP.REPORT_CODE = RS.REPORT_CODE) WHERE RP.REPORT_NO = ?)) PENALTY_POINT FROM DUAL) WHERE UNO = (SELECT TARGET_UNO FROM REPORT WHERE REPORT_NO = ?)
selectPaybackSize=SELECT COUNT(PB_NO) PB FROM PAYBACK WHERE PB_STATUS = 'N'
selectRefundSize=SELECT COUNT(RF_NO) RF FROM REFUND WHERE RF_STATUS = 'N'


#minji
loginSelect=SELECT * FROM MEMBER WHERE USER_ID = ? AND USER_PWD = ? AND STATUS = 'Y'
idCheck=SELECT COUNT(*) FROM MEMBER WHERE USER_ID = ?
emailCheck=SELECT COUNT(*) FROM MEMBER WHERE EMAIL = ? AND STATUS = 'Y'
insertMember=INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, ?, NULL, DEFAULT, DEFAULT)
setEmailChecked=UPDATE MEMBER SET EMAIL_VERIF = 'Y' WHERE USER_ID = ?
insertPoint=INSERT INTO POINT VALUES(SEQ_POINT_CODE.NEXTVAL, (SELECT UNO FROM MEMBER WHERE USER_ID = ?), NULL, ?, ?)
insertReport=INSERT INTO REPORT VALUES(SEQ_REPORT_NO.NEXTVAL, SYSDATE, ?, ?, ?, ?, NULL, NULL, NULL) 
getBwriterPhone=SELECT PHONE FROM MEMBER M JOIN BOARD B ON (B.BWRITER = M.UNO) WHERE B.BNO = ?
findIdwithPhone=SELECT USER_ID FROM MEMBER WHERE USER_NAME = ? AND PHONE LIKE ?
findIdwithEmail=SELECT USER_ID FROM MEMBER WHERE USER_NAME = ? AND EMAIL = ?



#joon
updateUser=UPDATE MEMBER SET USER_NAME = ?, EMAIL = ?, PHONE = ?, SUB_PHONE = ? WHERE UNO = ?